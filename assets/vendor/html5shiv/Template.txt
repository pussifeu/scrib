_tempFileName = $path.DIRECTORY_SEPARATOR.time().'.docx';
copy($strFilename, $this->_tempFileName); // Copy the source File to the
temp File $this->_objZip = new ZipArchive();
$this->_objZip->open($this->_tempFileName); $this->_documentXML =
$this->_objZip->getFromName('word/document.xml'); } /** * Set a Template
value * * @param mixed $search * @param mixed $replace */ public
function setValue($search, $replace) { if(substr($search, 0, 2) !== '${'
&& substr($search, -1) !== '}') { $search = '${'.$search.'}'; }
if(!is_array($replace)) { $replace = utf8_encode($replace); }
$this->_documentXML = str_replace($search, $replace,
$this->_documentXML); } /** * Clone a table row * * @param mixed $search
* @param mixed $numberOfClones */ public function cloneRow($search,
$numberOfClones) { if(substr($search, 0, 2) !== '${' && substr($search,
-1) !== '}') { $search = '${'.$search.'}'; } $tagPos =
strpos($this->_documentXML, $search); $rowStartPos =
strrpos($this->_documentXML, "_documentXML) - $tagPos) * -1));
$rowEndPos = strpos($this->_documentXML, "", $tagPos) + 7; $result =
substr($this->_documentXML, 0, $rowStartPos); $xmlRow =
substr($this->_documentXML, $rowStartPos, ($rowEndPos - $rowStartPos));
for ($i = 1; $i <= $numberOfClones; $i++) { $result .=
preg_replace('/\$\{(.*?)\}/','\${\\1#'.$i.'}', $xmlRow); } $result .=
substr($this->_documentXML, $rowEndPos); $this->_documentXML = $result;
} /** * Save Template * * @param string $strFilename */ public function
save($strFilename) { if(file_exists($strFilename)) {
unlink($strFilename); }
$this->_objZip->addFromString('word/document.xml', $this->_documentXML);
// Close zip file if($this->_objZip->close() === false) { throw new
Exception('Could not close zip file.'); } rename($this->_tempFileName,
$strFilename); } } ?>
